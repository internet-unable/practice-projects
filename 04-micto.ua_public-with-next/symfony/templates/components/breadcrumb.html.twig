{% extends 'knp_menu.html.twig' %}

{% block list %}
    {% import 'knp_menu.html.twig' as macros %}

    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        <nav id="breadcrumbs">
            <ol{{ macros.attributes(listAttributes | merge({
                'itemscope': '',
                'itemtype': 'http://schema.org/BreadcrumbList'
            })) }}>
                {{ block('children') }}
            </ol>
        </nav>
    {% endif %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}

        {%- set attributes = item.attributes | merge({
            'itemscope': '',
            'itemprop': 'itemListElement',
            'itemtype': 'http://schema.org/ListItem'
        }) %}

        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}

        {# displaying the item #}
        {% import _self as knp_menu %}
        <li{{ knp_menu.attributes(attributes) }}>
            {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            <meta itemprop='position' content='{{ loop.index }}'>
        </li>
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% import _self as knp_menu %}
    <a href="{{ absolute_url(item.uri) }}"{{ knp_menu.attributes(item.linkAttributes | merge({
        'itemprop': 'item'
    })) }}>
        {{ block('spanElement') }}
    </a>
{% endblock %}

{% block spanElement %}
    {% import _self as knp_menu %}
    <span{{ knp_menu.attributes(item.labelAttributes | merge({
        'itemprop': 'name'
    })) }}>
        {{ block('label') }}
    </span>
{% endblock %}
