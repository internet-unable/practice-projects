@import './fonts.scss';
@import './vars';
@import './colors.scss';

.input-wrapper {
	display: flex;
	flex-flow: column nowrap;
	gap: 16px;
	&:has(.error-message) {
		input,
		textarea {
			border-color: $error;
			transition: all 0.3s;
		}
	}
	textarea {
		min-height: 90px;
		font-family: 'Inter';
		font-size: 16px;
	}
	&.valid {
		input {
			border-color: $success;
		}
	}
}

input,
textarea,
select {
	border: 1px solid $gray;
	border-radius: 8px;
	background-color: #fff;
	padding: $mainStep + 3 $mainStep * 2;
	transition: all 0.1s;
	color: $color9;
	height: 44px;
	&::placeholder {
		color: $gray3;
	}
	&:focus,
	&:focus-visible {
		outline: none;
		border-color: $color5;
		// background-color: $activeBg;
		box-shadow: none !important;
		// &::placeholder {
		//   color: transparent;
		// }
	}
	&:hover {
		border-color: $color5;
		// background-color: $activeBg;
	}
	&:disabled {
		background-color: rgba($gray, $alpha: 0.2);
		&:hover {
			background-color: rgba($gray, $alpha: 0.3);
			border-color: $gray;
			cursor: not-allowed;
		}
	}
}

textarea {
	resize: none;
	font-family: 'Inter';
}

select {
	border: 1px solid $gray;
	border-radius: 8px;
	background-color: #fff;
	padding-right: $mainStep * 4;
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
	background-image: url('../../public/img/select_arrow_down.svg');
	background-repeat: no-repeat;
	background-position: right 0.7rem top 50%;
	background-size: 0.65rem auto;
	&:focus,
	&:focus-visible {
		background-color: white;
		&::placeholder {
			color: transparent;
		}
	}
	&:hover {
		background-color: white;
	}
	option[value=''] {
		display: none;
	}
	select {
		color: $gray2;
	}
	option:not(:first-of-type) {
		color: black;
	}
}

.add-new {
	width: fit-content;
	background-color: #fff;
	border: 0;
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	gap: 8px;

	&::before {
		content: '';
		display: block;
		width: 24px;
		height: 24px;
	}
}

form {
	.global-form-error {
		&:has(.error-block) {
			margin-bottom: 8px;
		}
	}
	.error-message {
		color: $error;
		transition: 0.5s;
		max-height: 72px;
		overflow: hidden;
		&.hide {
			max-height: 0 !important;
			padding: 0 !important;
			overflow: hidden !important;
		}
		ul {
			list-style: none;
			padding-left: 0;
			margin: $mainStep 0;
		}
		& ~ input[type='text'],
		& ~ input[type='password'],
		& ~ input[type='tel'],
		& ~ input[type='email'] {
			border-color: $error;
		}

		&.recaptcha {
			max-height: 100%;
			iframe {
				border: 1px solid $error;
			}
		}
	}

	.input-row:has(.error-message) {
		input {
			border-color: $error;
		}
	}

	.input-row {
		label {
			order: -1;
		}
	}
	.help-text {
		font-family: 'Inter';
		font-size: 14px;
		font-weight: 400;
		line-height: 21px;
		color: $gray4;
		margin-top: $mainStep;
		order: 120;
		span {
			white-space: nowrap;
		}
	}

	label + .help-text {
		margin-top: 0;
	}
	
	input:has(+ .error-block:not(.hidden):not(.hide-animation)),
	textarea:has(+ .error-block:not(.hidden):not(.hide-animation)) {
		border-color: $error;
	}

	.input-row {
		&:has(.error-block:not(.hidden):not(.hide-animation)) {
			.error-block {
				margin-top: 2px;
			}
			&:has(.ss-main) {
				.ss-main {
					border-color: $error;
				}
			}
		}
	}

	.error-block {
		border: 1px solid $error;
		background-color: $redBg;
		padding: 12px 16px;
		border-radius: 8px;
		color: $black;
		display: flex;
		align-items: center;
		gap: 8px;
		font-size: 16px;
		line-height: 24px;
		max-height: 1000px;
		transition: max-height 0.5s ease-in-out;
		width: 100%;
		order: 100;
		&.hide-animation {
			overflow: hidden;
			max-height: 0px;
			transition: max-height 0.15s cubic-bezier(0, 1, 0, 1), border 0.5s;
			padding: 0 16px;
			margin: 0;
			border: 0;
		}
		&::before {
			content: '';
			display: block;
			width: 24px;
			height: 24px;
			min-width: 24px;
			min-height: 24px;
			background: url('../../public/img/warning.svg') center no-repeat;
			background-size: 24px;
		}
	}
}

.select {
	div:has(> .select-search-help) {
		position: relative;
		.select-search-help {
			top: 6px;
			left: 10px;
			position: absolute;
			color: #ccc;
		}
	}
}

.submit-row {
	width: 100%;
}

.checkbox-wrapper {
	input[type='checkbox'] {
		display: none;
		padding: 0;
		margin: 0;
		visibility: hidden;
	}
	&.terms {
		label {
			@media (max-width:768px) {
				font-size: 14px;
			}
		}
	}
	label {
		margin: 0;
		display: flex;
		flex-flow: row nowrap;
		padding-left: $mainStep * 4;
		align-items: center;
		position: relative;
		width: fit-content;
		cursor: pointer;
		&.required {
			&::after {
				content: none !important;
			}
		}
		&::before {
			top: 4px;
			left: 0px;
			position: absolute;
			content: '';
			display: block;
			width: 18px;
			height: 18px;
			border: 1px solid $gray3;
			flex: 0 0 18px;
			border-radius: 2px;
		}
	}
	&:has(.error-block:not(.hidden)) {
		label {
			&::before {
				border-color: $error;
			}
		}
	}
	input[type='checkbox']:checked ~ label {
		&::before {
			background-color: $color8;
			border: 1px solid $color8;
		}
		&::after {
			width: 18px;
			height: 18px;
			top: 4px;
			left: 3.5px;
			position: absolute;
			color: #fff;
			display: block;
			content: 'âœ“' !important;
			line-height: 18px;
			font-size: 14px;
		}
	}
}

div:has(> .error-message) {
	textarea,
	div .ss-main,
	input {
		border-color: $error;
	}
}

fieldset {
	border: 0;
}

input[type='radio'] {
	position: absolute;
	opacity: 0;
	cursor: pointer;
	height: 0;
	width: 0;
}

input[type='radio'] + label {
	flex: 1 0 100%;
	display: flex;
	flex-flow: row nowrap;
	align-items: center;
	gap: $mainStep;
	margin: 0;
	position: relative;
	&::before {
		display: block;
		content: '';
		width: 20px;
		height: 20px;
		background: url('../../public/img/not_checked_radio.svg') center no-repeat;
		background-size: 20px;
		transition: 0.2s;
	}
	&:hover {
		cursor: pointer;
		&::after {
			position: absolute;
			content: '';
			height: 20px;
			width: 20px;
			left: 0;
			display: block;
			background: url('../../public/img/radio_hover.svg') center no-repeat;
			opacity: 0.5;
			background-size: 20px;
		}
	}
}

input[type='radio']:checked + label {
	&::before {
		background: url('../../public/img/checked_radio.svg') center no-repeat;
		background-size: 20px;
	}
}

.input-row {
	display: flex;
	flex-direction: column;
	margin-bottom: $mainStep * 3;
	&:last-of-type {
		// margin-bottom: 0;
	}
	label {
		color: $black;
		@include fontRegular2;
		margin-bottom: $mainStep;
	}
}
